---
description: 
globs: 
alwaysApply: false
---
# Theme System Guide

## Theme Context
The theme system is implemented using React Context in [ThemeContext.tsx](mdc:src/contexts/ThemeContext.tsx).

## Key Features
- Dark/light mode support
- System preference detection
- Local storage persistence
- Smooth transitions using View Transitions API

## Theme Toggle Component
The theme toggle is implemented in [ThemeToggle.tsx](mdc:src/components/ThemeToggle.tsx) with:
- Animated transitions
- View Transitions API support
- Fallback for browsers without View Transitions

## CSS Variables
Theme colors are defined in [globals.css](mdc:src/app/globals.css):
```css
[data-theme='light'] {
  --body-bg-color: #f5f5fa;
  --accent-color: #ff5671;
  /* ... other variables ... */
}

[data-theme='dark'] {
  --body-bg-color: #1f2328;
  --accent-color: #ff5671;
  /* ... other variables ... */
}
```

## Usage
```tsx
import { useTheme } from '@/contexts/ThemeContext'

function MyComponent() {
  const { theme, toggleTheme } = useTheme()
  return (
    <div>
      Current theme: {theme}
      <button onClick={toggleTheme}>Toggle Theme</button>
    </div>
  )
}
```

## Best Practices
1. Use CSS variables for theme colors
2. Support both light and dark modes
3. Implement smooth transitions
4. Respect user system preferences
5. Persist theme choice in localStorage

